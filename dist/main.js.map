{"mappings":"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","sources":["src/index.jsx","src/Select.jsx","src/MultiSelect.jsx"],"sourcesContent":["import { Keyboard, KeyboardAvoidingView } from 'react-native';\nimport Select from './Select';\nimport Multiple from './MultiSelect';\n\nfunction SelectList() {\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" style={{ flex: 1 }}>\n      <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n        <Select {...props} />\n      </TouchableWithoutFeedback>\n    </KeyboardAvoidingView>\n  );\n}\n\nfunction MultipleSelect() {\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" style={{ flex: 1 }}>\n      <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n        <Multiple {...props} />\n      </TouchableWithoutFeedback>\n    </KeyboardAvoidingView>\n  );\n}\n\nexport { SelectList, MultipleSelect };\n","import { useMemo, useState, ReactNode } from 'react';\nimport {\n  TextInput,\n  Text,\n  View,\n  ScrollView,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport { Column as Col, Row } from 'react-native-flexbox-grid';\nimport { TouchableOpacity } from 'react-native';\nimport Icon from 'react-native-vector-icons/Ionicons';\n\nconst Select = ({\n  data,\n  value = '',\n  placeholder = 'Choose one',\n  searchResult = 'No result found',\n  onChange,\n  borderColor,\n  containerStyle,\n  indexValue = 'value',\n  icon: ReactNode,\n}) => {\n  const [show, setShow] = useState(false);\n  const [showAction, setShowAction] = useState(false);\n  const [search, setSearch] = useState('');\n  const [_value, setValue] = useState('');\n\n  const _data = useMemo(() => {\n    let withSearch = data.filter(item =>\n      item.value?.toLowerCase().includes(search.trim().toLowerCase()),\n    );\n    return search ? withSearch : data;\n  }, [data, search]);\n\n  return (\n    <View style={containerStyle}>\n      {showAction === false ? (\n        <TouchableWithoutFeedback\n          onPress={() => {\n            setShow(true);\n            setShowAction(true);\n          }}\n        >\n          <View\n            style={{\n              borderWidth: 1,\n              borderColor: borderColor || '#444',\n              borderRadius: 10,\n              borderBottomRightRadius: show ? 0 : 10,\n              borderBottomLeftRadius: show ? 0 : 10,\n              padding: 15,\n              marginBottom: 15,\n            }}\n          >\n            <Row>\n              <Col sm={11}>\n                <Text style={{ fontSize: 16 }}>\n                  {value\n                    ? _data.filter(item => item[indexValue] === value)[0]?.value\n                    : _value\n                      ? _value\n                      : placeholder}\n                </Text>\n              </Col>\n              <Col sm={1}>\n                <TouchableOpacity\n                  onPress={() => {\n                    setShow(true);\n                    setShowAction(true);\n                  }}\n                >\n                  <Icon name=\"caret-down\" size={20} />\n                </TouchableOpacity>\n              </Col>\n            </Row>\n          </View>\n        </TouchableWithoutFeedback>\n      ) : (\n        <View\n          style={{\n            borderWidth: 1,\n            borderColor: borderColor || '#444',\n            borderRadius: 10,\n            padding: 15,\n            marginBottom: 10,\n            borderBottomRightRadius: show ? 0 : 10,\n            borderBottomLeftRadius: show ? 0 : 10,\n          }}\n        >\n          <Row>\n            <Col sm={11}>\n              <TextInput\n                placeholderTextColor=\"#9B9B9B\"\n                underlineColorAndroid=\"transparent\"\n                placeholder={'Search....'}\n                style={{ fontSize: 16 }}\n                onChangeText={text => setSearch(text)}\n              />\n            </Col>\n            <Col sm={1}>\n              <TouchableOpacity\n                onPress={() => {\n                  setShowAction(false);\n                  setShow(false);\n                  setSearch('');\n                }}\n              >\n                <Icon name=\"close\" size={20} />\n              </TouchableOpacity>\n            </Col>\n          </Row>\n        </View>\n      )}\n\n      <View\n        style={{\n          maxHeight: search ? 'auto' : 200,\n          borderWidth: 1,\n          borderColor: borderColor || '#444',\n          borderRadius: 10,\n          padding: 15,\n          marginTop: show ? -10 : 0,\n          borderTopColor: show ? 'transparent' : '#444',\n          borderTopRightRadius: show ? 0 : 10,\n          borderTopLeftRadius: show ? 0 : 10,\n          marginBottom: 15,\n          display: show ? 'flex' : 'none',\n        }}\n      >\n        <ScrollView>\n          {_data.map(item => (\n            <TouchableOpacity\n              key={item.key}\n              style={{ marginBottom: 10 }}\n              onPress={() => {\n                onChange(item[indexValue]);\n                setShow(false);\n                setShowAction(false);\n                setValue(item.value);\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 16,\n                  color: item[indexValue] === value ? '#000' : '#333',\n                }}\n              >\n                {item.value}\n              </Text>\n            </TouchableOpacity>\n          ))}\n          {_data?.length === 0 && (\n            <Text style={{ textAlign: 'center', padding: 20 }}>\n              {searchResult}\n            </Text>\n          )}\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Select;\n","import { useMemo, useState } from 'react';\nimport {\n  TextInput,\n  Text,\n  View,\n  ScrollView,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport Checkbox from 'expo-checkbox';\nimport { Column as Col, Row } from 'react-native-flexbox-grid';\nimport { TouchableOpacity } from 'react-native';\nimport Icon from 'react-native-vector-icons/Ionicons';\n\nconst Multiple = ({\n  data,\n  value = [],\n  placeholder = 'Choose multiple',\n  searchResult = 'No result found',\n  onChange,\n  borderColor,\n  containerStyle,\n  indexValue = 'value',\n}) => {\n  const [show, setShow] = useState(value?.length ? true : false);\n  const [showAction, setShowAction] = useState(false);\n  const [showList, setShowList] = useState(false);\n  const [search, setSearch] = useState('');\n  const [all, selectAll] = useState(false);\n\n  const _data = useMemo(() => {\n    let withSearch = data.filter(item =>\n      item.value?.toLowerCase().includes(search.trim().toLowerCase()),\n    );\n    return search ? withSearch : data;\n  }, [data, search]);\n\n  const handleMultipleSelect = val => {\n    if (value.includes(val)) {\n      let _value = value.filter(item => item !== val);\n      onChange(_value);\n    } else {\n      let _value = [val, ...value];\n      onChange(_value);\n    }\n\n    data.length === value.length ? selectAll(true) : selectAll(false);\n  };\n\n  return (\n    <>\n      <View>\n        {showAction === false ? (\n          <TouchableWithoutFeedback\n            onPress={() => {\n              setShow(true);\n              setShowAction(true);\n              setShowList(true);\n            }}\n          >\n            <View\n              style={{\n                borderWidth: 1,\n                borderColor: '#444',\n                borderRadius: 10,\n                borderBottomRightRadius: value?.length ? 0 : 10,\n                borderBottomLeftRadius: value?.length ? 0 : 10,\n                padding: 15,\n                marginBottom: 10,\n              }}\n            >\n              <Row>\n                <Col sm={11}>\n                  <Text style={{ fontSize: 16 }}>{placeholder}</Text>\n                </Col>\n                <Col sm={1}>\n                  <TouchableOpacity\n                    onPress={() => {\n                      setShow(true);\n                      setShowList(true);\n                      setShowAction(true);\n                    }}\n                  >\n                    <Icon name=\"caret-down\" size={20} />\n                  </TouchableOpacity>\n                </Col>\n              </Row>\n            </View>\n          </TouchableWithoutFeedback>\n        ) : (\n          <View\n            style={{\n              borderWidth: 1,\n              borderColor: '#444',\n              borderRadius: 10,\n              padding: 15,\n              marginBottom: 10,\n              borderBottomRightRadius: value?.length ? 0 : 10,\n              borderBottomLeftRadius: value?.length ? 0 : 10,\n            }}\n          >\n            <Row>\n              <Col sm={11}>\n                <TextInput\n                  placeholderTextColor=\"#9B9B9B\"\n                  underlineColorAndroid=\"transparent\"\n                  placeholder={'Search....'}\n                  style={{ fontSize: 16 }}\n                  onChangeText={text => setSearch(text)}\n                />\n              </Col>\n              <Col sm={1}>\n                <TouchableOpacity\n                  onPress={() => {\n                    setShowList(!showList);\n                    setShowAction(false);\n                    value?.length ? setShow(true) : setShow(false);\n                    setSearch('');\n                  }}\n                >\n                  <Icon name=\"close\" size={20} />\n                </TouchableOpacity>\n              </Col>\n            </Row>\n          </View>\n        )}\n\n        <View\n          style={{\n            height: value?.length || search ? 'auto' : 350,\n            borderWidth: 1,\n            borderColor: '#444',\n            borderRadius: 10,\n            padding: 15,\n            marginTop: value?.length ? -10 : 0,\n            borderTopColor: value?.length ? 'transparent' : '#444',\n            borderTopRightRadius: value?.length ? 0 : 10,\n            borderTopLeftRadius: value?.length ? 0 : 10,\n            display: show ? 'flex' : 'none',\n          }}\n        >\n          <ScrollView\n            style={{\n              height: search ? 'auto' : value?.length ? 200 : 330,\n              display: showList ? 'flex' : 'none',\n            }}\n          >\n            {!search && (\n              <Row style={{ marginBottom: 10 }}>\n                <Col sm={2}>\n                  <Checkbox\n                    value={all}\n                    color={all ? '#9b9b9b' : undefined}\n                    onValueChange={() => {\n                      !all\n                        ? onChange(data.map(item => item.value))\n                        : onChange([]);\n                      selectAll(!all);\n                    }}\n                  />\n                </Col>\n                <Col sm={10}>\n                  <TouchableOpacity>\n                    <Text style={{ fontSize: 16 }}>Select all</Text>\n                  </TouchableOpacity>\n                </Col>\n              </Row>\n            )}\n            {_data.map(item => (\n              <Row key={item.key} style={{ marginBottom: 10 }}>\n                <Col sm={2}>\n                  <Checkbox\n                    value={\n                      value.filter(_item => _item === item.value)?.length === 1\n                    }\n                    color={\n                      value.filter(_item => _item === item.value)?.length === 1\n                        ? '#9b9b9b'\n                        : undefined\n                    }\n                    onValueChange={() => handleMultipleSelect(item.value)}\n                  />\n                </Col>\n                <Col sm={10}>\n                  <TouchableOpacity>\n                    <Text style={{ fontSize: 16 }}>{item.value}</Text>\n                  </TouchableOpacity>\n                </Col>\n              </Row>\n            ))}\n            {_data?.length === 0 && (\n              <Text style={{ textAlign: 'center', padding: 20 }}>\n                {searchResult}\n              </Text>\n            )}\n          </ScrollView>\n          <View style={{ display: value?.length ? 'flex' : 'none' }}>\n            <Row style={{ marginBottom: 10 }}>\n              <Col sm={3}>\n                <Text\n                  style={{\n                    position: 'relative',\n                    top: 7,\n                    fontWeight: '500',\n                    fontSize: 12,\n                  }}\n                >\n                  Selected ({value?.length})\n                </Text>\n              </Col>\n              <Col sm={9} style={{ borderBottomWidth: 1, borderColor: '#444' }}>\n                <Text>&nbsp;</Text>\n              </Col>\n            </Row>\n            <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n              {value.map((item, index) => (\n                <View\n                  key={index}\n                  style={{\n                    backgroundColor: '#808080',\n                    padding: 5,\n                    paddingLeft: 10,\n                    paddingRight: 10,\n                    borderRadius: 10,\n                    margin: 5,\n                    // marginLeft: 10,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Text\n                    style={{\n                      color: '#fff',\n                      textAlign: 'center',\n                      fontSize: 12,\n                    }}\n                  >\n                    {item}\n                  </Text>\n                </View>\n              ))}\n            </View>\n          </View>\n        </View>\n      </View>\n    </>\n  );\n};\n\nexport default Multiple;\n"],"names":[],"version":3,"file":"main.js.map"}